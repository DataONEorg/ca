#!/bin/bash

# Script to be called by Checkmk monitoring system, to alert when certs are within a certain
# number of days of expiring. It does this for both the prod and the test certs, by parsing the
# csv files generated by the `cert_status` script.
#
CRITICAL_DAYS=5
WARN_DAYS=21

CSV_URL_PROD="https://raw.githubusercontent.com/DataONEorg/ca/main/prod_cert_status.csv"
CSV_URL_TEST="https://raw.githubusercontent.com/DataONEorg/ca/main/test_cert_status.csv"


# Checkmk agent runs every minute. That's far too frequent for a cert expiration check (and GH
# may not like us curling the csv files so frequently). Therefore, limit this run to only once
# per day:
#
DAILY_RUN_TIME=23:23

if [ "$(date +%H:%M)" != "$DAILY_RUN_TIME" ]; then
  exit 0
fi

process_csv() {
    # expects 4 args: process_csv <CSV_URL> <WARN_DAYS> <CRITICAL_DAYS> <prod|test>

    curl -s "$1" | \
    awk -v expiry_warn_days="$2" \
        -v expiry_critical_days="$3" \
        -v environment="$4"  -F',' '
    {
        # header row
        if(NR==1) {
            if($8 != "Created"){
                print "2", "d1_" environment "_cert_checks", "-", "Did not get valid CSV file!";
                exit 1;
            }
            next;
        }
        dn = $3$4$5;
        expires = $9;
        expire_days = $8;

        dn = gensub(/"/, "", "g", dn);

        cn = gensub(/CN=/, "", "g", $5);
        cn = gensub(/"$/, "", "g", cn);
        service_name = "d1_" environment "_cert_" cn

        if(expire_days < expiry_critical_days){
            status = "2";
        } else if(expire_days < expiry_warn_days){
            status = "1";
        } else {
            status = "0";
        }
        print status, service_name, "-", "expires in", expire_days, "days:", dn;
    }'
}

process_csv $CSV_URL_PROD $WARN_DAYS $CRITICAL_DAYS "prod"

process_csv $CSV_URL_TEST $WARN_DAYS $CRITICAL_DAYS "test"
